0:00:00.830,0:00:03.700
Alright. The correct answer is that relational databases are

0:00:03.700,0:00:06.400
useful because it is straightforward to extract data with

0:00:06.400,0:00:10.930
complex queries. A database scales well. And relational databases

0:00:10.930,0:00:14.610
ensure data is consistently formatted. What do each of these

0:00:14.610,0:00:17.890
mean? Well, first off it's easy to extract data

0:00:17.890,0:00:20.900
from the database with a complex one line query. We

0:00:20.900,0:00:23.500
can easily say choose all records for people where

0:00:23.500,0:00:25.920
their age is greater than 50, and their weight is

0:00:25.920,0:00:28.750
less than 50, and the city is equal to Mumbai.

0:00:28.750,0:00:31.040
We can do this with flat files as well, but

0:00:31.040,0:00:35.210
its a lot more work. Database is also scale well.

0:00:35.210,0:00:38.080
Its not uncommon to have databases with hundreds of thousands

0:00:38.080,0:00:41.500
or millions of entries. Since all information is ideally stored

0:00:41.500,0:00:44.780
in one location, It's easy to update, delete, and add

0:00:44.780,0:00:48.290
new data to the database in a scalable way. Think

0:00:48.290,0:00:51.456
of the [UNKNOWN] data for example. India has a population

0:00:51.456,0:00:55.000
of 1.2 billion people. That's a really big data

0:00:55.000,0:00:58.150
set. It's important to have a solution that scales well.

0:00:58.150,0:01:01.560
Finally, relational databases have a concept of something called

0:01:01.560,0:01:04.510
a schema. Which basically says that each column in a

0:01:04.510,0:01:07.840
table Is always of the same type you can't

0:01:07.840,0:01:10.270
have some people's age be a string while the age

0:01:10.270,0:01:13.550
of others is an int. Relational databases are built

0:01:13.550,0:01:16.540
to have as little redundancy as possible that way if

0:01:16.540,0:01:19.980
we want to update a value we only have to do it in one place and we can ensure

0:01:19.980,0:01:23.840
that our data remains consistent throughout the entire database.

0:01:23.840,0:01:26.900
Also, relational databases are well established and have been used

0:01:26.900,0:01:29.330
for some time. Even if they were hot and

0:01:29.330,0:01:32.670
new, that's not a great reason to use a technology.

0:01:32.670,0:01:34.930
And now that we know why relational databases might be

0:01:34.930,0:01:38.150
useful, let's discuss how to use them in more detail.
