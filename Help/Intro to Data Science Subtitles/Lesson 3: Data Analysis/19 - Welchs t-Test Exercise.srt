1
00:00:00,420 --> 00:00:03,280
Okay, why don't we work through an example. Let's say

2
00:00:03,280 --> 00:00:06,220
we had a CSV file located at this directory, and that

3
00:00:06,220 --> 00:00:09,080
it contained a number of columns. Among them are a player's

4
00:00:09,080 --> 00:00:12,130
name. We call that column, name. There's also a column called

5
00:00:12,130 --> 00:00:15,770
handedness, L for left-handed R for right-handed, and a column

6
00:00:15,770 --> 00:00:19,770
for the player's career batting average, called avg. Write a function

7
00:00:19,770 --> 00:00:22,350
that will read that data into a Pandas data frame, and

8
00:00:22,350 --> 00:00:26,310
then run Welch's t-test on the two cohorts defined by handedness.

9
00:00:26,310 --> 00:00:28,900
With a significance level of 95%, if there

10
00:00:28,900 --> 00:00:31,040
is no difference between the two cohorts, return

11
00:00:31,040 --> 00:00:33,890
a tuple consisting of true, and then the

12
00:00:33,890 --> 00:00:38,580
tuple returned by scipy.stats.ttest. If there is a difference,

13
00:00:38,580 --> 00:00:40,910
return a tuple consisting of false, and then

14
00:00:40,910 --> 00:00:44,710
the tuple returned by scipy.stats.ttest. So an example of

15
00:00:44,710 --> 00:00:47,010
what your output might look like is false

16
00:00:47,010 --> 00:00:51,390
and then the tuple 0.405, 0.006. Your code should

17
00:00:51,390 --> 00:00:54,850
go here. Since we're using Welch's t-test, we're assuming our data

18
00:00:54,850 --> 00:00:57,680
is sampled at random and that both samples follow a normal

19
00:00:57,680 --> 00:01:00,880
distribution. We don't make any assumptions about the variance of both

20
00:01:00,880 --> 00:01:03,750
samples. They may be the same, but they also may be different.
